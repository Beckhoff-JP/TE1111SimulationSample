<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="Cylinder" Id="{78da19cc-508f-4a31-91e7-b419e493c65e}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK Cylinder
VAR_INPUT
	bExecute: BOOL; // Execute cyclically moving
	push_edge_time: TIME := T#0.5S; // The time confirming stability of sensor input at the pushing side.
	pull_edge_time: TIME := T#0.5S; // The time confirming stability of sensor input at the pulling side.
	limit_time	: TIME := T#3S; // The time until time-out error occuring during moving.
	keep_actuator : BOOL := FALSE; // Continue to excite even after in-position state.
	stroke_wait_time: TIME := T#5S; // Waiting time before reversing of cyclical piston moving.
END_VAR
VAR_OUTPUT
	status: position_status := position_status.unknown; // Current status
	position: _2_position; // Current position
	bError:BOOL; // Error occured
END_VAR
VAR
	command_activate: BOOL;
	push_command: BOOL;
	pull_command: BOOL;
	edge_timer:Tc2_Standard.TON;
	limit_timer:Tc2_Standard.TON;
	stroke_wait_timer: Tc2_Standard.TON;
	last_cycle_position: _2_position;
	last_cycle_status : position_status;
END_VAR

VAR_IN_OUT
	io: cylinder2IO;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bExecute THEN
	stroke_wait_timer(IN := last_cycle_position = position, PT := stroke_wait_time);
	CASE position OF
		_2_position.position_2:
			IF stroke_wait_timer.Q THEN
				push_command := FALSE;
				pull_command := TRUE;				
			END_IF
		_2_position.position_1:
			IF stroke_wait_timer.Q THEN
				push_command := TRUE;
				pull_command := FALSE;
			END_IF
	END_CASE
ELSE
	push_command := FALSE;
	pull_command := FALSE;
END_IF
last_cycle_position := position;

command_activate := push_command OR pull_command;
CASE status OF
	position_status.unknown:
		IF last_cycle_status = position_status.inposition THEN
			bError := TRUE;
		END_IF
		io.push_output := FALSE;
		io.pull_output := FALSE;
		IF bError THEN
			bError := command_activate;
		ELSE
			IF push_command AND position = _2_position.position_1 THEN
				status := position_status.moving;
			END_IF
			IF pull_command AND position = _2_position.position_2 THEN
				status := position_status.moving;
			END_IF
		END_IF
	position_status.inposition:
		edge_timer.IN := FALSE;
		
		CASE position OF
			_2_position.position_1:
				IF push_command	THEN
					status := position_status.moving;
				END_IF
				IF io.push_sensor OR NOT io.pull_sensor THEN
					status := position_status.unknown;
				END_IF
			_2_position.position_2:
				IF pull_command	THEN
					status := position_status.moving;
				END_IF
				IF NOT io.push_sensor OR io.pull_sensor THEN
					status := position_status.unknown;
				END_IF
		END_CASE
		
		IF keep_actuator THEN
			io.push_output := (position = _2_position.position_2);
			io.pull_output := (position = _2_position.position_1);
		ELSE
			io.push_output := FALSE;
			io.pull_output := FALSE;
		END_IF
		
	position_status.moving:
		IF push_command THEN
			edge_timer.PT := push_edge_time;
			IF io.push_sensor AND NOT io.pull_sensor THEN
				edge_timer.IN := TRUE;
				IF edge_timer.Q THEN
					position := _2_position.position_2;
					status := position_status.inposition;
				END_IF
			ELSE
				edge_timer.IN := FALSE;
			END_IF
			io.push_output := TRUE;
			io.pull_output := FALSE;
		END_IF
		IF pull_command THEN
			edge_timer.PT := pull_edge_time;
			IF NOT io.push_sensor AND io.pull_sensor THEN
				edge_timer.IN := TRUE;
				IF edge_timer.Q THEN
					position := _2_position.position_1;
					status := position_status.inposition;
				END_IF
			ELSE
				edge_timer.IN := FALSE;
			END_IF
			io.push_output := FALSE;
			io.pull_output := TRUE;
		END_IF

END_CASE


limit_timer(IN:=command_activate AND (status <> position_status.inposition), PT:=limit_time);
IF limit_timer.Q THEN
	status := position_status.unknown;
	bError := TRUE;
END_IF

edge_timer();

last_cycle_status := status;]]></ST>
    </Implementation>
    <LineIds Name="Cylinder">
      <LineId Id="258" Count="0" />
      <LineId Id="316" Count="0" />
      <LineId Id="261" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="318" Count="0" />
      <LineId Id="321" Count="1" />
      <LineId Id="320" Count="0" />
      <LineId Id="271" Count="0" />
      <LineId Id="323" Count="0" />
      <LineId Id="273" Count="1" />
      <LineId Id="324" Count="0" />
      <LineId Id="264" Count="0" />
      <LineId Id="306" Count="1" />
      <LineId Id="305" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="259" Count="1" />
      <LineId Id="27" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="237" Count="0" />
      <LineId Id="361" Count="2" />
      <LineId Id="238" Count="1" />
      <LineId Id="392" Count="1" />
      <LineId Id="395" Count="0" />
      <LineId Id="398" Count="5" />
      <LineId Id="396" Count="0" />
      <LineId Id="34" Count="0" />
      <LineId Id="404" Count="2" />
      <LineId Id="408" Count="0" />
      <LineId Id="411" Count="2" />
      <LineId Id="422" Count="1" />
      <LineId Id="421" Count="0" />
      <LineId Id="414" Count="2" />
      <LineId Id="410" Count="0" />
      <LineId Id="418" Count="2" />
      <LineId Id="409" Count="0" />
      <LineId Id="407" Count="0" />
      <LineId Id="71" Count="1" />
      <LineId Id="82" Count="0" />
      <LineId Id="74" Count="1" />
      <LineId Id="83" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="127" Count="0" />
      <LineId Id="64" Count="0" />
      <LineId Id="92" Count="1" />
      <LineId Id="100" Count="1" />
      <LineId Id="116" Count="1" />
      <LineId Id="123" Count="0" />
      <LineId Id="118" Count="0" />
      <LineId Id="104" Count="1" />
      <LineId Id="102" Count="0" />
      <LineId Id="112" Count="1" />
      <LineId Id="94" Count="2" />
      <LineId Id="107" Count="1" />
      <LineId Id="120" Count="2" />
      <LineId Id="119" Count="0" />
      <LineId Id="109" Count="1" />
      <LineId Id="106" Count="0" />
      <LineId Id="114" Count="1" />
      <LineId Id="97" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="125" Count="0" />
      <LineId Id="124" Count="0" />
      <LineId Id="176" Count="0" />
      <LineId Id="179" Count="1" />
      <LineId Id="247" Count="0" />
      <LineId Id="181" Count="0" />
      <LineId Id="357" Count="0" />
      <LineId Id="98" Count="0" />
      <LineId Id="314" Count="0" />
      <LineId Id="313" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>